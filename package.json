{
  "name": "QuoteKit",
  "version": "0.2.0",
  "private": true,
  "packageManager": "bun@1.2.17",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix && eslint --fix --ext .ts,.tsx src/",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "type-fix": "npm run lint:fix && npm run type-check",
    "type-fix:auto": "./scripts/auto-type-fix.sh",
    "email:build": "email build",
    "email:dev": "email dev --dir ./src/features/emails --port 3001",
    "email:export": "email export",
    "stripe:listen": "stripe listen --forward-to=localhost:3000/api/webhooks --project-name=UPDATE_THIS_WITH_YOUR_STRIPE_PROJECT_NAME",
    "sync-stripe": "npx tsx scripts/sync-stripe.ts",
    "stripe:check": "node check-stripe-status.js",
    "stripe:cleanup": "node stripe-cleanup-script.js",
    "generate-types": "npx supabase gen types typescript --project-id UPDATE_THIS_WITH_YOUR_SUPABASE_PROJECT_ID --schema public > src/libs/supabase/types.ts",
    "supabase:link": "env-cmd -f ./.env.local supabase link --project-ref UPDATE_THIS_WITH_YOUR_SUPABASE_PROJECT_ID",
    "migration:new": "supabase migration new",
    "migration:up": "supabase migration up --linked --debug && npm run generate-types",
    "migration:squash": "supabase migration squash --linked",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:help-tours": "node scripts/test-help-tours.js",
    "test:help-tours:watch": "node scripts/test-help-tours.js --watch",
    "test:help-tours:coverage": "node scripts/test-help-tours.js --coverage",
    "test:lawnquote": "node scripts/run-lawnquote-tests.js",
    "test:lawnquote:coverage": "node scripts/run-lawnquote-tests.js --coverage",
    "blog:migrate": "npx tsx scripts/migrate-blog-posts.ts",
    "blog:validate": "npx tsx scripts/validate-content.ts",
    "blog:seo-audit": "npx tsx scripts/seo-audit.ts",
    "blog:benchmark": "npx tsx scripts/performance-benchmark.ts",
    "blog:new": "npx tsx scripts/create-blog-post.ts --",
    "blog:analytics": "npx tsx scripts/content-analytics.ts",
    "blog:publish": "npx tsx scripts/publishing-workflow.ts publish",
    "blog:draft": "npx tsx scripts/publishing-workflow.ts draft",
    "blog:schedule": "npx tsx scripts/publishing-workflow.ts schedule",
    "blog:status": "npx tsx scripts/publishing-workflow.ts status",
    "blog:process-scheduled": "npx tsx scripts/publishing-workflow.ts process-scheduled",
    "blog:validate-seo": "npx tsx scripts/validate-seo-geo.ts",
    "analyze": "ANALYZE=true npm run build",
    "blog:perf-test": "npx tsx scripts/performance-benchmark.ts",
    "blog:test-essential": "npx tsx scripts/essential-tests.ts",
    "prepare": "husky",
    "edge-functions:test:local": "deno run --allow-all tests/realistic-local-tests.ts",
    "edge-functions:test:production": "deno run --allow-all scripts/production-integration-test.ts",
    "edge-functions:test:performance": "bash scripts/realistic-performance-test.sh",
    "edge-functions:test:connection-pool": "deno run --allow-all scripts/connection-pool-test.ts",
    "edge-functions:test:health": "deno run --allow-all tests/realistic-local-tests.ts --health-check",
    "edge-functions:deploy:local": "bash scripts/deploy-all-functions.sh --local",
    "edge-functions:deploy:production": "bash scripts/deploy-all-functions.sh --project-ref $SUPABASE_PROJECT_ID",
    "edge-functions:deploy:test": "npm run edge-functions:deploy:production && npm run edge-functions:test:production",
    "edge-functions:test:full": "npm run edge-functions:test:local && npm run edge-functions:deploy:local && npm run edge-functions:test:performance && npm run edge-functions:test:connection-pool",
    "edge-functions:test:critical": "npm run edge-functions:test:health && npm run edge-functions:test:production --health-check",
    "edge-functions:diagnose": "bash scripts/diagnose-edge-functions.sh",
    "edge-functions:diagnose:enhanced": "bash scripts/diagnose-edge-functions-enhanced.sh",
    "edge-functions:ci": "bash scripts/edge-functions-ci.sh",
    "edge-functions:ci:quick": "bash scripts/edge-functions-ci.sh --quick",
    "edge-functions:test:ui": "echo 'Open http://localhost:3000/test-edge-functions in your browser'",
    "security:audit": "bash scripts/security-audit-simple.sh",
    "security:setup": "bash scripts/setup-secure-testing.sh"
  },
  "dependencies": {
    "@number-flow/react": "^0.5.10",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-collapsible": "^1.1.2",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.4",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.4",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-toggle-group": "^1.1.10",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@react-email/components": "^0.0.32",
    "@react-pdf/renderer": "^4.3.0",
    "@stripe/react-stripe-js": "^2.9.0",
    "@stripe/stripe-js": "^2.4.0",
    "@supabase/ssr": "^0.5.2",
    "@supabase/supabase-js": "^2.47.12",
    "@types/jszip": "^3.4.0",
    "@types/nodemailer": "^6.4.17",
    "@types/uuid": "^10.0.0",
    "@vercel/analytics": "^1.4.1",
    "caniuse-lite": "^1.0.30001727",
    "class-variance-authority": "^0.7.1",
    "classnames": "^2.5.1",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "dotenv": "^17.2.1",
    "driver.js": "^1.3.6",
    "gray-matter": "^4.0.3",
    "jszip": "^3.10.1",
    "lucide-react": "^0.474.0",
    "next": "^15.1.7",
    "next-mdx-remote": "^5.0.0",
    "next-route-handler-pipe": "^1.0.5",
    "nodemailer": "^7.0.5",
    "posthog-js": "^1.257.2",
    "posthog-node": "^5.6.0",
    "react": "19.0.0",
    "react-day-picker": "^9.8.0",
    "react-dom": "19.0.0",
    "react-email": "^2.1.6",
    "react-icons": "^5.4.0",
    "resend": "^4.1.1",
    "stripe": "^14.25.0",
    "tailwind-merge": "^2.6.0",
    "tailwindcss": "^3.4.17",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.1.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@next/bundle-analyzer": "^15.4.5",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/react-hooks": "^8.0.1",
    "@types/jest": "^30.0.0",
    "@types/jsdom": "^21.1.7",
    "@types/react": "19.0.4",
    "@types/react-dom": "19.0.2",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "autoprefixer": "^10.4.20",
    "env-cmd": "^10.1.0",
    "eslint": "^8.57.1",
    "eslint-config-next": "^15.1.4",
    "eslint-config-prettier": "^8.10.0",
    "eslint-plugin-react": "^7.37.3",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "eslint-plugin-tailwindcss": "^3.17.5",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "jest-environment-node": "^30.0.5",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.4",
    "node-mocks-http": "^1.17.2",
    "postcss": "^8.4.49",
    "prettier": "^3.6.2",
    "prettier-plugin-tailwindcss": "^0.3.0",
    "supabase": "^1.226.4",
    "ts-jest": "^29.4.0",
    "typescript": "^5.7.3",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix"
    ]
  },
  "overrides": {
    "@types/react": "19.0.4",
    "@types/react-dom": "19.0.2",
    "prettier": "^3.6.2"
  },
  "resolutions": {
    "prettier": "^3.6.2"
  }
}
